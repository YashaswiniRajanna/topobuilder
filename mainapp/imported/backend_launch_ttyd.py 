import re
import subprocess
import json

BASE_PORT = 3101
SERVER_IP = "10.77.92.106"  # Change to your server's IP

def parse_clab_deploy_output(deploy_output, base_port=3101):
    """
    Parses containerlab deploy ASCII table output.
    Returns a list of dicts: [{'node': 'R1', 'ip': '111.111.111.111', 'ttyd_port': 3101}, ...]
    """
    results = []
    pattern = r"clab-[\w\-]+-(R\d+)\s+\│[^\│]+\│[^\│]+\│\s+([\d\.]+)\s+\│"
    matches = re.findall(pattern, deploy_output)
    for idx, (node, ip) in enumerate(matches):
        results.append({
            'node': node,
            'ip': ip,
            'ttyd_port': base_port + idx
        })
    return results

def launch_ttyd_per_router(node_list):
    """
    Launches a ttyd instance for each router.
    """
    for node in node_list:
        cmd = [
            "ttyd",
            "-p", str(node['ttyd_port']),
            "ssh", "-o", "StrictHostKeyChecking=no", "-o", "UserKnownHostsFile=/dev/null",
            f"clab@{node['ip']}"
        ]
        subprocess.Popen(cmd)
        print(f"Started ttyd for {node['node']} at port {node['ttyd_port']}")

def save_node_list(node_list, filename="router_nodes.json"):
    with open(filename, "w") as f:
        json.dump(node_list, f)

# ---- Example usage after deploy ----
if __name__ == "__main__":
    # Suppose deploy_output is captured as a string from your deploy process
    with open("deploy_output.txt") as f:
        deploy_output = f.read()

    node_list = parse_clab_deploy_output(deploy_output, BASE_PORT)
    launch_ttyd_per_router(node_list)
    save_node_list(node_list)
    print("Router info saved for Streamlit app.")